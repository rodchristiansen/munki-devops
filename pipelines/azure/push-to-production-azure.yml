trigger:
  branches:
    include:
      - main
  paths:
    include:
      - /deployment/**

pool:
  vmImage: macOS-13

variables:
  - group: munki-repo-secrets            # contains SAS token + connection IDs
  - name: AZ_STORAGE_URL                 # e.g. https://stor.blob.core.windows.net/munki
    value: '<blob-url-with-SAS>'
  - name: FDO_ENDPOINT_NAME              # Front Door endpoint
    value: '<munki-fd-endpoint.azurefd.net>'
  - name: azureServiceConnection
    value: '<ADO-service-conn>'
  - name: REPO_PATH
    value: '/deployment'

stages:
- stage: PushMunkiRepo
  jobs:
  - job: CloudDeploy
    steps:
    - checkout: self
      clean: true
      persistCredentials: true

    - script: |
        git sparse-checkout init --cone
        git sparse-checkout set deployment pipelines
      displayName: Sparse checkout

    - script: |
        brew install --cask git-credential-manager
        brew install munki
      displayName: Install Munki tools (Homebrew)

    - script: |
        /usr/local/munki/makecatalogs --skip-pkg-check \
          "$(Build.SourcesDirectory)$(REPO_PATH)"
      displayName: Run makecatalogs

    - script: |
        find "$(Build.SourcesDirectory)/deployment/pkgs" \
             -type f -name '*.pkg.*' -delete
      displayName: Sanitize /pkgs folder

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          azcopy sync \
            "$(Build.SourcesDirectory)/deployment/catalogs" \
            "$(AZ_STORAGE_URL)/repo/deployment/catalogs$(AZ_SAS)" \
            --recursive --delete-destination=true
          azcopy sync \
            "$(Build.SourcesDirectory)/deployment/manifests" \
            "$(AZ_STORAGE_URL)/repo/deployment/manifests$(AZ_SAS)" \
            --recursive --delete-destination=true
          azcopy sync \
            "$(Build.SourcesDirectory)/deployment/pkgsinfo" \
            "$(AZ_STORAGE_URL)/repo/deployment/pkgsinfo$(AZ_SAS)" \
            --recursive --delete-destination=true
      displayName: Sync to Azure Blob

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az network front-door purge-endpoint \
            --name $(FDO_ENDPOINT_NAME) \
            --content-paths '/*'
      displayName: Purge Front Door
